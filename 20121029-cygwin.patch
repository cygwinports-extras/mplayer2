--- origsrc/mplayer2/configure	2012-10-29 01:19:38.010346200 -0500
+++ src/mplayer2/configure	2012-10-29 00:59:46.567037100 -0500
@@ -1351,6 +1351,9 @@ fi
 
 if win32 ; then
   _exesuf=".exe"
+fi
+
+if mingw32 ; then
   extra_cflags="$extra_cflags -fno-common"
   # -lwinmm is always needed for osdep/timer-win2.c
   extra_ldflags="$extra_ldflags -lwinmm"
@@ -1359,9 +1362,6 @@ if win32 ; then
   _priority=yes
   def_dos_paths="#define HAVE_DOS_PATHS 1"
   def_priority="#define CONFIG_PRIORITY 1"
-fi
-
-if mingw32 ; then
   _getch=getch2-win.c
   need_shmem=no
   extra_cflags="$extra_cflags -D__USE_MINGW_ANSI_STDIO=1"
@@ -1494,7 +1494,7 @@ if test "$_runtime_cpudetection" = no ;
 
 # Cygwin has /proc/cpuinfo, but only supports Intel CPUs
 # FIXME: Remove the cygwin check once AMD CPUs are supported
-if test -r /proc/cpuinfo && ! cygwin; then
+if test -r /proc/cpuinfo; then
   # Linux with /proc mounted, extract CPU information from it
   _cpuinfo="cat /proc/cpuinfo"
 elif test -r /compat/linux/proc/cpuinfo && ! x86 ; then
@@ -4993,7 +4993,7 @@ if test "$_vcd" = auto; then
   _vcd=no
   if linux || freebsd || netbsd || openbsd || dragonfly || bsdos || darwin || sunos; then
     _vcd=yes
-  elif mingw32; then
+  elif win32; then
   header_check ddk/ntddcdrm.h && _vcd=yes
   fi
 fi
@@ -5084,7 +5084,7 @@ if test "$_libdvdcss_internal" = yes ; t
     def_dvd_darwin='#define DARWIN_DVD_IOCTL'
     extra_ldflags="$extra_ldflags -framework IOKit -framework Carbon"
   elif cygwin ; then
-    cflags_libdvdcss="-DSYS_CYGWIN -DWIN32"
+    cflags_libdvdcss="-DSYS_CYGWIN"
   elif beos ; then
     cflags_libdvdcss="-DSYS_BEOS"
   fi
@@ -6194,7 +6194,7 @@ if test "$_dvdnav" = yes ; then
     inputmodules="dvdnav(internal) $inputmodules"
   else
     extra_cflags="$extra_cflags $($_dvdnavconfig --cflags)"
-    extra_ldflags="$extra_ldflags $($_dvdnavconfig --minilibs)"
+    extra_ldflags="$($_dvdnavconfig --minilibs) $extra_ldflags"
     inputmodules="dvdnav $inputmodules"
   fi
 else
--- origsrc/mplayer2/libaf/af_ladspa.c	2012-10-29 01:19:38.010346200 -0500
+++ src/mplayer2/libaf/af_ladspa.c	2012-10-29 00:59:46.000000000 -0500
@@ -295,7 +295,7 @@ static void* mydlopen(const char *filena
     size_t filenamelen;
     void *result = NULL;
 
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
     /* For Windows there's only absolute path support.
      * If you have a Windows machine, feel free to fix this.
      * (path separator, shared objects extension, et cetera). */
--- origsrc/mplayer2/libmpcodecs/ad_mpg123.c	2012-10-29 00:48:54.000000000 -0500
+++ src/mplayer2/libmpcodecs/ad_mpg123.c	2012-10-29 01:19:18.960319900 -0500
@@ -45,6 +45,7 @@ LIBAD_EXTERN(mpg123)
  * principle, but is not supported.
  * So, please leave the check for MPG123_API_VERSION there, m-kay?
  */
+#define MPG123_NO_LARGENAME
 #include <mpg123.h>
 
 /* Enable faster mode of operation with newer libmpg123, avoiding
--- origsrc/mplayer2/mangle.h	2013-01-28 03:26:35.000000000 -0600
+++ src/mplayer2/mangle.h	2013-01-28 03:37:53.940910100 -0600
@@ -31,7 +31,7 @@
 #define attribute_used
 #endif
 
-#if defined(_WIN32) && !defined(_WIN64) || defined(__APPLE__)
+#if ((defined(_WIN32) || defined(__CYGWIN__)) && defined(__i386)) || defined(__APPLE__)
 #define EXTERN_PREFIX "_"
 #else
 #define EXTERN_PREFIX ""
--- origsrc/mplayer2/mplayer.c	2012-10-29 01:19:38.020346200 -0500
+++ src/mplayer2/mplayer.c	2012-10-29 00:59:46.717037300 -0500
@@ -29,7 +29,7 @@
 
 #include "osdep/io.h"
 
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
 #include <windows.h>
 // No proper file descriptor event handling; keep waking up to poll input
 #define WAKEUP_PERIOD 0.02
@@ -698,7 +698,7 @@ void uninit_player(struct MPContext *mpc
 void exit_player_with_rc(struct MPContext *mpctx, enum exit_reason how, int rc)
 {
     uninit_player(mpctx, INITIALIZED_ALL);
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
     timeEndPeriod(1);
 #endif
 #ifdef CONFIG_X11
@@ -1251,7 +1251,7 @@ static void print_status(struct MPContex
         width = screen_width;
     else
         width = 80;
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
     /* Windows command line is broken (MinGW's rxvt works, but we
      * should not depend on that). */
     width--;
@@ -3990,7 +3990,7 @@ int main(int argc, char *argv[])
 
     print_version("MPlayer2");
 
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
     {
         HMODULE kernel32 = GetModuleHandle("Kernel32.dll");
         BOOL WINAPI (*setDEP)(DWORD) = NULL;
--- origsrc/mplayer2/path.c	2012-10-29 01:19:38.020346200 -0500
+++ src/mplayer2/path.c	2012-10-29 00:59:46.767037300 -0500
@@ -72,7 +72,7 @@ char *get_path(const char *filename){
 	if ((homedir = getenv("MPLAYER_HOME")) != NULL)
 		config_dir = "";
 	else if ((homedir = getenv("HOME")) == NULL)
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
 	/* Hack to get fonts etc. loaded outside of Cygwin environment. */
 	{
 		int i,imax=0;
--- origsrc/mplayer2/stream/stream_vcd.c	2012-10-29 01:19:38.020346200 -0500
+++ src/mplayer2/stream/stream_vcd.c	2012-10-29 00:59:46.000000000 -0500
@@ -154,7 +154,7 @@ static int open_s(stream_t *stream,int m
       p->device = talloc_strdup(NULL, DEFAULT_CDROM_DEVICE);
   }
 
-#if defined(__MINGW32__) || defined(__CYGWIN__)
+#if defined(__MINGW32__)
   device[4] = p->device[0];
   /* open() can't be used for devices so do it the complicated way */
   hd = CreateFile(device, GENERIC_READ, FILE_SHARE_READ, NULL,
